2019-11-03 14:56:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE USERS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT UNIQUE[*],USERNAME VARCHAR2(20) NOT NULL,PASSWORD VARCHAR2(20) NOT NULL) "; ожидалось "(, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE USERS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT UNIQUE[*],USERNAME VARCHAR2(20) NOT NULL,PASSWORD VARCHAR2(20) NOT NULL) "; expected "(, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
create table users ( id number(10) primary key AUTO_INCREMENT UNIQUE,username varchar2(20) not null,password varchar2(20) not null) [42001-197]
2019-11-03 14:58:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE FILMS ( IMDBID VARCHAR2(50) PRIMARY KEY NOT NULL UNIQUE[*],NAME VARCHAR2(100),TYPE VARCHAR2(50),GENRE VARCHAR2(250),RELEASEDATE DATE "; ожидалось "CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE FILMS ( IMDBID VARCHAR2(50) PRIMARY KEY NOT NULL UNIQUE[*],NAME VARCHAR2(100),TYPE VARCHAR2(50),GENRE VARCHAR2(250),RELEASEDATE DATE "; expected "CHECK, REFERENCES, ,, )"; SQL statement:
create table films ( imdbId varchar2(50) primary key not null UNIQUE,name varchar2(100),type varchar2(50),genre varchar2(250),releaseDate date [42001-197]
2019-11-03 14:59:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Таблица "USERS" уже существует
Table "USERS" already exists; SQL statement:
create table users ( id number(10) primary key AUTO_INCREMENT,username varchar2(20),password varchar2(20)) [42101-197]
2019-11-03 14:59:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE FILMS ( IMDBID VARCHAR2(50) PRIMARY KEY,NAME VARCHAR2(100),TYPE VARCHAR2(50),GENRE VARCHAR2(250),RELEASEDATE DATE [*]"; ожидалось "(, FOR, UNSIGNED, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE FILMS ( IMDBID VARCHAR2(50) PRIMARY KEY,NAME VARCHAR2(100),TYPE VARCHAR2(50),GENRE VARCHAR2(250),RELEASEDATE DATE [*]"; expected "(, FOR, UNSIGNED, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
create table films ( imdbId varchar2(50) primary key,name varchar2(100),type varchar2(50),genre varchar2(250),releaseDate date [42001-197]
2019-11-03 15:02:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),+[*]RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),+[*]RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; expected "identifier"; SQL statement:
create table reviews ( id number(10) primary key AUTO_INCREMENT,author number(10),text varchar2(500),+rating number(1),postDate date,filmID varchar2(50)FOREIGN KEY (author)  REFERENCES users (id),FOREIGN KEY (filmID)  REFERENCES films (imdbId)) [42001-197]
2019-11-03 15:02:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Таблица "FILMS" уже существует
Table "FILMS" already exists; SQL statement:
create table films ( imdbId varchar2(50) primary key,name varchar2(100),type varchar2(50),genre varchar2(250),releaseDate date) [42101-197]
2019-11-03 15:03:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),+[*]RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),+[*]RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; expected "identifier"; SQL statement:
create table reviews ( id number(10) primary key AUTO_INCREMENT,author number(10),text varchar2(500),+rating number(1),postDate date,filmID varchar2(50)FOREIGN KEY (author)  REFERENCES users (id),FOREIGN KEY (filmID)  REFERENCES films (imdbId)) [42001-197]
2019-11-03 15:03:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Синтаксическая ошибка в выражении SQL "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN[*] KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; ожидалось "FOR, UNSIGNED, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE REVIEWS ( ID NUMBER(10) PRIMARY KEY AUTO_INCREMENT,AUTHOR NUMBER(10),TEXT VARCHAR2(500),RATING NUMBER(1),POSTDATE DATE,FILMID VARCHAR2(50)FOREIGN[*] KEY (AUTHOR)  REFERENCES USERS (ID),FOREIGN KEY (FILMID)  REFERENCES FILMS (IMDBID)) "; expected "FOR, UNSIGNED, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, BIGSERIAL, SERIAL, IDENTITY, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, ,, )"; SQL statement:
create table reviews ( id number(10) primary key AUTO_INCREMENT,author number(10),text varchar2(500),rating number(1),postDate date,filmID varchar2(50)FOREIGN KEY (author)  REFERENCES users (id),FOREIGN KEY (filmID)  REFERENCES films (imdbId)) [42001-197]
